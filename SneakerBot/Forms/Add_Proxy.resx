<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AddBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAYFJREFUaEPt
        mbFKA0EQhhOtBCvxCUTBd7CwEGyst0j2FnO7uHteoQg2didiY+cDWNhY+CQWCrY29lGw0YBFSJzzBpXc
        crlYmFmZD36WXGb3/o9AwpEGwzDTRaTpPCzN4lWAqHhnPdLuDjKEdFXsjuByWEJtvbsE5Xso8R3j9nEk
        DJRxxyWJIg84EgYqthceiTxvOBIGFSI9HAkDFqEGi1CDRajBItRgEWqQEolMuixjdwI3v4p0cj1Z3OOP
        8l+B8/r++epInZxHxm5htfpIk6zBjV9Hi0w/ySlWrAdsui8fQiKDVseuYs1qhDiY8xxAJtLYbaw6liZs
        eB49gEqkcRvYczzwbH3oO4RAboQQs1izHvAVugcb82+fl0mjtHuHtVwkdgNYvXuqkzzBeimMWcB6fwP/
        IFKDRajBItRgEWqwCDVYhBr/RuTzGdsv0sWRMJDabnokhvknhSPhAMXPIPnzRyGh3W3L2kV8OyzaHbei
        jBX5X9VZls3gZYZhmN/SaHwAx+4FOQazQ/MAAAAASUVORK5CYII=
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAKjSURBVGhD7ZlBi9NAFMdb8aKiKHj2KAoqXlS8eREUD16ssJ1MSSbNTLqyivsFrDf15h68iSdR
        v4TeBPWiX0KhKuvZ7bq+0PeW7nRimsmkqTA/+FOYZN7Lr+mk3dmWx+PxeP4LekJdDoRa70l5AoecIKU8
        yGK1yiJ1C4fqg8cpB4kxZCcQ6YiF8iweqkQYhke5UB8mdSFx+gyG25OjjuFC3oEmf3abTbLJwuQCnmLF
        ipTHoc5nrS5EvroyHO7H09zAhFqD4roExVomX4LiUIZH8i4UzZOglJYpltjNm8oyIHEJCm1rhXMy/5qZ
        WRPFWcepduC6MBXOSTqCB8IZnG7EQmKHx+o1Trcje8RC05+m4vnJl7GRgGwHsbyBJexZCeUpKPZNK16U
        mTVTYk1MZ4vHsoMlqlNVZikkCFuZIFbX4HU5JAhLmbKpV4KoWWYLHha3sVX98P7qaWjqWmaxEoRjmWYk
        iF5/cA4u4rt2UWXTrARRUWY5JIigr64aLrIw8NPjIZZonsmXnfxiutA58qsbpxexVHNUlKA0K+NIgtKM
        jGMJymJlapKgLEamZgnKZq0y3cHgGDT5pDUtyhjEH8DrD228IOko+37C1u6wvBO/abMNf2h+1Y4XpfJW
        0x4mEuX/ntB3DBuV6XTuH4Db/NHQ4F8ZZzuSWGIP3TA5D8fLf8yS5CSWsCOIZN9cPDfZdmoPpxuxkWFC
        vcDpdnQjddNUOCeFEkRZGRbLxzjVnmxD2VRcS7aJN5cEMa8M3I33QojDOK0aUPCR3mAqMwt7XooeAFyo
        t9m/G/B0J7SZSJ8amllLELkykXrnWoJowzu0MdWssgQxIwMSnPNDeNg9w+FwXxCrezxKXzKRXMdhJ2Qy
        PJLPQeQJY2tHcNjj8Xg8ngXQav0FhV0XmHfcfmoAAAAASUVORK5CYII=
</value>
  </data>
</root>